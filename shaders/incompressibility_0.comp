#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#include "cpu_gpu_shared_config.h"

struct incomp_data {
	ivec3 mWeightedGradSum;
	uint  mDensity;
	uint  mSquaredGradSum;
	uint padding0;
	uint padding1;
	uint padding2;
};

// ---------------------- lists -----------------------
layout(set = 0, binding = 0) buffer InIndexList   { uint          inIndexList[]; };
layout(set = 0, binding = 1) buffer InInverseMass { float       inInverseMass[]; };
layout(set = 0, binding = 2) buffer InKernelWidth { float       inKernelWidth[]; };
layout(set = 0, binding = 3) buffer OutIncompData { incomp_data outIncompData[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set = 1, binding = 0) buffer InIndexListLength { uint inIndexListLength; };
// ----------------------------------------------------

// ------------------ apbf settings -------------------
layout(set = 2, binding = 0) uniform ApbfSettings { apbf_settings apbfSettings; };
// ----------------------------------------------------

#include "kernels.glsl"

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;
	if (id >= inIndexListLength) return;

	uint  idx         = inIndexList[id];
	float invMass     = inInverseMass[idx];
	float kernelWidth = inKernelWidth[id];

	outIncompData[id].mWeightedGradSum = ivec3(0, 0, 0);
	outIncompData[id].mDensity         = uint(kernel_height(vec3(0, 0, 0), kernelWidth) / invMass * INCOMPRESSIBILITY_DATA_RESOLUTION);
	outIncompData[id].mSquaredGradSum  = 0u;
}
