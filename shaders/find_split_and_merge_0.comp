#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#include "cpu_gpu_shared_config.h"

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InBoundariness      { float      inBoundariness[]; };
layout(set =  1, binding = 0) buffer OutUintBoundariness { uvec2 outUintBoundariness[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  2, binding = 0) buffer InBoundarinessLength { uint inBoundarinessLength; };
// ----------------------------------------------------

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;
	if (id >= inBoundarinessLength) return;

	uvec2 init;
	init.x = uint(BOUNDARINESS_RESOLUTION * inBoundariness[id]);
	init.y = uint(BOUNDARINESS_RESOLUTION);
	outUintBoundariness[id] = init;
}
