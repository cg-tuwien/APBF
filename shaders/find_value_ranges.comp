#version 460
#extension GL_ARB_separate_shader_objects : enable

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InIndexBuffer { uint inIndexBuffer[]; };
layout(set =  1, binding = 0) buffer InBuffer      { uint      inBuffer[]; };
layout(set =  2, binding = 0) buffer OutRangeStart { uint outRangeStart[]; };
layout(set =  3, binding = 0) buffer OutRangeEnd   { uint   outRangeEnd[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  4, binding = 0) buffer BufferLength { uint bufferLength; };
// ----------------------------------------------------

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;
	if (id >= bufferLength) return;

	uint currIdx = inIndexBuffer[id     ];
	uint prevIdx = inIndexBuffer[id - 1u];

	uint currValue = inBuffer[currIdx];
	uint prevValue = inBuffer[prevIdx];
	uint startId   = 0u;
	uint endId     = bufferLength - 1u;
	if (id == startId || currValue != prevValue) outRangeStart[currValue] = id;
	if (                 currValue != prevValue) outRangeEnd  [prevValue] = id;
	if (id ==   endId                          ) outRangeEnd  [currValue] = id + 1u;
}
