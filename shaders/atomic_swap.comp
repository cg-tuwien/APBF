#version 460
#extension GL_ARB_separate_shader_objects : enable

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InIndexList { uint inIndexList[]; };
layout(set =  1, binding = 0) buffer InOutSwapA  { uint  inOutSwapA[]; };
layout(set =  2, binding = 0) buffer InOutSwapB  { uint  inOutSwapB[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  3, binding = 0) buffer InIndexListLength { uint inIndexListLength; };
// ----------------------------------------------------

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;

	if (id >= inIndexListLength) return;

	uint bId = inIndexList[id];
//	uint newB = inOutSwapA[id]; // optimization: would always contain id => just use id here and don't initialize inOutSwapA beforehand
	uint newB = id;
	uint newA = atomicExchange(inOutSwapB[bId], newB);
	inOutSwapA[id] = newA;
}
