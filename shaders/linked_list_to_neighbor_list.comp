#version 460
#extension GL_ARB_separate_shader_objects : enable

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InLinkedList    { uvec2    inLinkedList[]; };
layout(set =  1, binding = 0) buffer InPrefixSum     { uint      inPrefixSum[]; };
layout(set =  2, binding = 0) buffer OutNeighborList { uvec2 outNeighborList[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  3, binding = 0) buffer InParticleCount  { uint  inParticleCount; };
layout(set =  4, binding = 0) buffer OutNeighborCount { uint outNeighborCount; };
// ----------------------------------------------------

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;

	if (id >= inParticleCount) return;

	uint  prefixSum     = id == 0u ? 0u : inPrefixSum [id - 1u];
	uvec2 entry         = inLinkedList[id];
	uint  neighborCount = entry.x;

	for (uint i = 0u; i < neighborCount; i++) {
		entry = inLinkedList[entry.y];
		outNeighborList[prefixSum + i] = uvec2(id, entry.x);
	}

	if (id == inParticleCount - 1) {
		outNeighborCount = prefixSum + neighborCount;
	}
}
