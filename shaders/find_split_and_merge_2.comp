#version 460
#extension GL_ARB_separate_shader_objects : enable
#extension GL_GOOGLE_include_directive : enable
#include "cpu_gpu_shared_config.h"

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InNeighbors           { uvec2           inNeighbors[]; };
layout(set =  1, binding = 0) buffer InIndexList           { uint            inIndexList[]; };
layout(set =  2, binding = 0) buffer InPosition            { ivec4            inPosition[]; };
layout(set =  3, binding = 0) buffer InMinNeighborDist     { uint      inMinNeighborDist[]; };
layout(set =  4, binding = 0) buffer OutNearestNeighbor    { uint     outNearestNeighbor[]; };
layout(set =  5, binding = 0) buffer InBoundariness        { float        inBoundariness[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  6, binding = 0) buffer InNeighborsLength { uint inNeighborsLength; };
// ----------------------------------------------------

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;
	if (id >= inNeighborsLength) return;

	uvec2 n = inNeighbors[id];

	uint  idx             = inIndexList[n[0]];
	uint  idxN            = inIndexList[n[1]];
	ivec3 pos             = inPosition[idx ].xyz;
	ivec3 posN            = inPosition[idxN].xyz;
	uint  minNeighborDist = inMinNeighborDist[n[0]];
	ivec3 diff            = posN - pos;
	uint  dist            = uint(length(diff));
	
	if (dist == minNeighborDist) {
		outNearestNeighbor[n[0]] = n[1];
	}
}
