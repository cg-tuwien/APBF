#version 460
#extension GL_ARB_separate_shader_objects : enable

// ---------------------- lists -----------------------
layout(set =  0, binding = 0) buffer InBuffer     { uint      inBuffer[]; };
layout(set =  1, binding = 0) buffer OutBuffer    { float    outBuffer[]; };
layout(set =  2, binding = 0) buffer InIndexList  { uint   inIndexList[]; };
layout(set =  3, binding = 0) buffer InLowerBound { float inLowerBound[]; };
// ----------------------------------------------------

// ------------------- list lengths -------------------
layout(set =  4, binding = 0) buffer InBufferLength { uint inBufferLength; };
// ----------------------------------------------------

// ------------------ push constants ------------------
layout(push_constant) uniform PushConstants {
	float mFactor;
	float mLowerBoundFactor;
	float mMaxAdaptionStep;
};
// ----------------------------------------------------

float move_towards(float oldValue, float newValue, float maxStep)
{
	float step = newValue - oldValue;
	return oldValue + min(maxStep, max(-maxStep, step));
}

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;
void main()
{
	uint id = gl_GlobalInvocationID.x;

	if (id >= inBufferLength) return;

	uint idx = inIndexList[id];

	float value      = float(inBuffer[id]) * mFactor;
	float lowerBound =   inLowerBound[idx] * mLowerBoundFactor;

	value = move_towards(outBuffer[id], value, mMaxAdaptionStep);
	outBuffer[id] = max(value, lowerBound);
}
